/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package group1.booklend.views;

import java.sql.SQLException;
import java.util.List;

import group1.booklend.models.Book;
import group1.booklend.models.Borrower;

/**
 *
 * @author User
 */
public class BorrowView extends javax.swing.JFrame {

    private static BorrowView instance = null;
    private Book book;

    /**
     * Creates new form BorrowView
     */
    private BorrowView() {
        initComponents();
        try {
            loadBorrowers();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listBorrowers = new javax.swing.JList<>();
        btnConfirm = new javax.swing.JButton();
        lblHeading = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(420, 340));
        setResizable(false);
        setSize(new java.awt.Dimension(420, 340));
        getContentPane().setLayout(null);

        listBorrowers.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };

            public int getSize() {
                return strings.length;
            }

            public String getElementAt(int i) {
                return strings[i];
            }
        });
        jScrollPane1.setViewportView(listBorrowers);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 60, 370, 170);

        btnConfirm.setBackground(new java.awt.Color(51, 0, 51));
        btnConfirm.setForeground(new java.awt.Color(255, 255, 255));
        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });
        getContentPane().add(btnConfirm);
        btnConfirm.setBounds(304, 263, 80, 30);

        lblHeading.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblHeading.setText("Select Borrower");
        getContentPane().add(lblHeading);
        lblHeading.setBounds(130, 10, 120, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnConfirmActionPerformed

        try {
            int index = listBorrowers.getSelectedIndex();
            Borrower borrower = Borrower.all().get(index);
            book.borrow(borrower);
            this.dispose();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
        BookDetailView.getInstance().setTableData();
        BookDetailView.getInstance().btnLogic();
        DashboardView.getInstance().refreshBooksTable();
    }// GEN-LAST:event_btnConfirmActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BorrowView.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BorrowView.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BorrowView.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BorrowView.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BorrowView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirm;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JList<String> listBorrowers;
    // End of variables declaration//GEN-END:variables

    public void setBook(Book book) {
        this.book = book;
    }

    public static BorrowView getInstance() {
        if (instance == null) {
            instance = new BorrowView();
        }
        return instance;
    }

    public void loadBorrowers() throws SQLException {

        List<Borrower> borrowers = Borrower.all();
        String[] borrowerNames = new String[borrowers.size()];
        for (int i = 0; i < borrowers.size(); i++) {
            borrowerNames[i] = borrowers.get(i).getName();
        }
        listBorrowers.setListData(borrowerNames);
    }
}
